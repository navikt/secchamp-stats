name: Build main

on:
   push:
      branches:
         - main
      paths-ignore:
         - "*.md"
   workflow_dispatch:

jobs:
   build:
      name: Build all the things
      runs-on: ubuntu-20.04
      steps:
         - uses: actions/checkout@v2
         - uses: actions/setup-java@v2
           with:
              java-version: '17'
              distribution: 'adopt'
              cache: 'gradle'
         - uses: gradle/wrapper-validation-action@v1
         - name: Build and test the app
           run: ./gradlew clean test shadowJar
         - name: Install cosign
           uses: sigstore/cosign-installer@main
           with:
              cosign-release: 'v1.8.0'
         - name: Verify distroless base image
           run: cosign verify --key distroless.pub gcr.io/distroless/java17
         - name: Generate Docker image tag with short sha
           id: dockertag
           run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
         - name: Login to GitHub Docker Registry
           uses: docker/login-action@v1
           with:
              registry: ghcr.io
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }}
         - name: Build and push the Docker image
           uses: docker/build-push-action@v2
           with:
              context: .
              push: true
              tags: ${{ steps.dockertag.outputs.docker_img }}
              cache-from: type=registry,ref=${{ steps.dockertag.outputs.docker_img }}
              cache-to: type=inline

   deploy_to_dev:
      name: Deploy to dev
      needs: build
      runs-on: ubuntu-20.04
      steps:
         - uses: actions/checkout@v2
         - name: Generate Docker image tag
           id: dockertag
           run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
         - uses: nais/deploy/actions/deploy@v1
           env:
              APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
              CLUSTER: dev-gcp
              RESOURCE: .nais/nais.yaml
              IMAGE: ${{ steps.dockertag.outputs.docker_img }}
              VARS: .nais/dev.yaml

   deploy_to_prod:
     name: Deploy to prod
     needs: deploy_to_dev
     runs-on: ubuntu-20.04
     steps:
       - uses: actions/checkout@v2
       - name: Generate Docker image tag
         id: dockertag
         run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
       - uses: nais/deploy/actions/deploy@v1
         env:
           APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
           CLUSTER: prod-gcp
           RESOURCE: .nais/nais.yaml,.nais/alerts.yaml
           IMAGE: ${{ steps.dockertag.outputs.docker_img }}
           VARS: .nais/prod.yaml
